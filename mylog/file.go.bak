package mylog

import (
	"fmt"
	"os"
	"path"
	"time"
)

// FileLogger 往文件中记录日志的结构
type FileLogger struct {
	//level int
	level Level
	logFilePath string
	logFileName string
	logFile *os.File  // os包中File类型指针
	errFile *os.File
}

func NewFileLogger(level Level,logFilePath, logFilename string) *FileLogger {
	f1Obj := &FileLogger{
		level: level,
		logFilePath: logFilePath,
		logFileName: logFilename,
	}
	f1Obj.initFileLogger() // 调用下面的初始化方法
	return f1Obj
}

// 专门用来初始化文件日志的文件句柄
func (f *FileLogger)initFileLogger()  {
	// 拼接一个filePath字符串
	//filePath := fmt.Sprintf("%s/%s", f.logFilePath, f.logFileName)
	logName := path.Join(f.logFilePath, f.logFileName)
	fileObj, err := os.OpenFile(logName, os.O_CREATE|os.O_APPEND|os.O_RDWR, 0644)
	if err != nil {
		panic(fmt.Sprintf("open file: %s failed ...", logName))
	}

	f.logFile = fileObj
	// 打开错误日志的文件
	errLogName := fmt.Sprintf("%s.err", logName)
	errFileObj, err := os.OpenFile(errLogName,os.O_CREATE|os.O_RDWR|os.O_APPEND, 0644)
	if err != nil {
		panic(fmt.Errorf("打开日志文件%s失败", errLogName))
	}
	f.errFile = errFileObj


}

// 记录日志
func (f *FileLogger)Debug(format string, args ...interface{})  {
	// 不记录大于当前日志等级的日志
	if f.level > DebugLevel {
		return
	}
	fileName, funcName, line := GetCallerInfo()
	// 往文件里面写
	// 往哪个日志文件里面写
	// 日志的格式要丰富:
	// 时间 日志级别 哪个文件 哪一行 哪个函数
	//f.logFile.WriteString(msg)
	// [2019-04-21 15:02:03] [DEBUG] main.go:main.go [14] message:id为10一直在尝试登陆
	now := time.Now().Format("[ 2006.01.02 15:04:05.000 ]")
	format = fmt.Sprintf("%s [%s] [%s:%s] [%d] %s",
		now,
		getLevelStr(0),
		fileName,
		funcName,
		line,
		format)
	fmt.Fprintf(f.logFile, format, args...)  // 先用args替换 format里面的占位符,然后写到f.logFile里面
	fmt.Fprintln(f.logFile)  // 加一个换行
}
func (f *FileLogger)Info(format string, args ...interface{})  {
	// 往文件里面写
	// 往哪个日志文件里面写
	//f.logFile.WriteString(msg)
	// 不记录大于当前日志等级的日志
	if f.level > InfoLevel {
		return
	}
	fileName, funcName, line := GetCallerInfo()
	// 往文件里面写
	// 往哪个日志文件里面写
	// 日志的格式要丰富:
	// 时间 日志级别 哪个文件 哪一行 哪个函数
	//f.logFile.WriteString(msg)
	// [2019-04-21 15:02:03] [DEBUG] main.go:main.go [14] message:id为10一直在尝试登陆
	now := time.Now().Format("[ 2006.01.02 15:04:05.000 ]")
	format = fmt.Sprintf("%s [%s] [%s:%s] [%d] %s",
		now,
		getLevelStr(2),
		fileName,
		funcName,
		line,
		format)
	fmt.Fprintf(f.logFile, format, args...)  // 先用args替换 format里面的占位符,然后写到f.logFile里面
	fmt.Fprintln(f.logFile)  // 加一个换行
}

func (f *FileLogger)Error(format string, args ...interface{})  {
	// 往文件里面写
	// 往哪个日志文件里面写
	//f.logFile.WriteString(msg)
	if f.level > ErrorLevel {
		return
	}
	fileName, funcName, line := GetCallerInfo()
	// 往文件里面写
	// 往哪个日志文件里面写
	// 日志的格式要丰富:
	// 时间 日志级别 哪个文件 哪一行 哪个函数
	//f.logFile.WriteString(msg)
	// [2019-04-21 15:02:03] [DEBUG] main.go:main.go [14] message:id为10一直在尝试登陆
	now := time.Now().Format("[ 2006.01.02 15:04:05.000 ]")
	format = fmt.Sprintf("%s [%s] [%s:%s] [%d] %s",
		now,
		getLevelStr(4),
		fileName,
		funcName,
		line,
		format)
	fmt.Fprintf(f.logFile, format, args...)  // 先用args替换 format里面的占位符,然后写到f.logFile里面
	fmt.Fprintln(f.logFile)  // 加一个换行
}
